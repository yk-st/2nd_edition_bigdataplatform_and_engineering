from pyspark.sql import SparkSession
from pyspark.sql.types import StructType, StructField, StringType
from pyspark.sql.functions import pandas_udf
from pyspark.sql import functions as F

import requests
import pandas as pd

# Sparkセッションを作成
spark = SparkSession.builder \
    .appName("latitude_longitude") \
    .getOrCreate()

# 通常のPythonでは関数の引数は、文字列やListなどですが、SparkのUDFではDataframeの列ごと関数に渡すイメージです。
@pandas_udf("string")
def pandas_udf_call_reversegeo_api(col: pd.Series) -> pd.Series:
    def call(latlon: str):
        # latlon = lat=35.5487429714954&lon=139.81602098644987のような値(簡単のため一緒にしてしまっている)
        # 0章で呼び出したAPIをPysparkで呼び出す
        response = requests.get('https://nominatim.openstreetmap.org/reverse?format=json&' + latlon)
        if response.status_code == 200:
            return str(response.json())
        else:
            print(f"Failed with status code: {response.status_code}")
            return str(response.json())
        return "NG"
    return col.apply(call)

# データの準備
# 中のタプルを増やすことによって、並列分散して複数取得できます（例: data = [("lat=35.5487429714954&lon=139.81602098644987"),("lat=35.5487429714954&lon=139.81602098644986")]）
data = [("lat=35.5487429714954&lon=139.81602098644987")]
df = spark.createDataFrame(data, StringType()).toDF("latlon")

#結果は以下のようなデータです。
#>>> df.show(truncate=False)
#+-------------------------------------------+                                   
#|latlon                                     |
#+-------------------------------------------+
#|lat=35.5487429714954&lon=139.81602098644987|
#+-------------------------------------------+

# pandas udfの呼び出し
result_df = df.withColumn("result", pandas_udf_call_reversegeo_api(F.col("latlon")))

# 結果は以下のようになり0章のAPIで紹介した結果と同じになりました。
# >>> df_widfth_json.show(truncate=False)
# +-------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
# |latlon                                     |result|

# |lat=35.5487429714954&lon=139.81602098644987|{'place_id': 385772009, 'licence': 'Data © OpenStreetMap contributors, ODbL 1.0. http://osm.org/copyright', 'osm_type': 'relation', 'osm_id': 1758947, 'lat': '35.561206', 'lon': '139.715843', 'class': 'boundary', 'type': 'administrative', 'place_rank': 14, 'importance': 0.5312781068643009, 'addresstype': 'city', 'name': '大田区', 'display_name': '大田区, 東京都, 日本', 'address': {'city': '大田区', 'ISO3166-2-lvl4': 'JP-13', 'country': '日本', 'country_code': 'jp'}, 'boundingbox': ['35.4816556', '35.6130909', '139.6528251', '139.8578153']}|
